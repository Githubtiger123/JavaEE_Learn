<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learn.mapper.employeeMapper">

    <cache
            eviction="FIFO"
            flushInterval="60000"
            size="512"
            readOnly="true"/>

    <resultMap id="resMap" type="employee">
        <!--        <constructor>-->
        <!--            <arg column="employee_id" javaType="int"/>-->
        <!--        </constructor>-->
        <result column="employee_id" property="employeeId"/>
        <result column="last_name" property="lastName"/>
        <result column="email" property="email"/>
        <result column="department_id" property="departmentId"/>
        <result column="salary" property="salary"/>
    </resultMap>

    <resultMap id="resMap2" type="employee">
        <result column="employee_id" property="employeeId"/>
        <result column="last_name" property="lastName"/>
        <result column="email" property="email"/>
        <result column="department_id" property="departmentId"/>
        <result column="salary" property="salary"/>
        <association property="department" javaType="department">
            <id column="department_id" property="department_id"/>
            <result column="department_name" property="department_name"/>
            <result column="manager_id" property="manager_id"/>
        </association>
    </resultMap>


    <select id="selectStudent" resultType="employee">
        select *
        from employees
    </select>

    <select id="selectStudentMap" resultMap="resMap">
        select *
        from employees
    </select>
    <!--单独关闭某个查询的二级缓存-->
    <!--    <select id="getEmployeeBySid" parameterType="int" resultType="employee" useCache="false">-->
    <!--    flushCache属性会在SQL语句执行之前清空缓存。-->
    <!--    <select id="getEmployeeBySid" parameterType="int" resultType="employee" flushCache="true">-->
    <select id="getEmployeeBySid" parameterType="int" resultType="employee">
        select *
        from employees
        where employee_id = #{empId}
    </select>

    <insert id="addEmployee" parameterType="employee">
        insert into employees
        values (#{employeeId}, #{lastName}, #{email}, #{departmentId}, #{salary})
    </insert>

    <select id="selectEmpAndDept" resultMap="resMap2">

        select departments.department_id, department_name, departments.manager_id, employee_id, last_name, email, salary
        from employees
                 right join departments
                            on employees.department_id = departments.department_id;
    </select>

    <select id="getEmployeeDoubleCondition" resultType="employee">
        select * from employees where employee_id = #{eid}
        <if test="eid % 2 == 0">
            and department_id = 60
        </if>
    </select>

    <select id="getEmployeeManyCondition" resultType="employee">
        select * from employees
        where employee_id = #{eid}
        <choose>
            <when test="eid == 100">
                and last_name = 'King'
            </when>
            <when test="eid == 101">
                and last_name = 'De Haan'
            </when>
            <otherwise>
                and department_id = 60
            </otherwise>
        </choose>
    </select>

</mapper>